üìã Relat√≥rio Completo do Projeto RAG - AI Cube (Jan - Abril 2025)
1. Equipe
Marcio Ferreira ‚Äì Senior Machine Learning Analyst (Owner)

Suayder ‚Äì Senior Machine Learning Engineer

Jorge Neto ‚Äì Junior Full Stack Developer

Manoel ‚Äì Adicionado posteriormente √† equipe (abril)

2. Ferramentas e Tecnologias Usadas

√Årea	Ferramenta/Modelo	Descri√ß√£o
Document Splitter	LangChain RecursiveCharacterTextSplitter	Divis√£o de documentos em chunks pequenos (500 caracteres com sobreposi√ß√£o de 100)‚Äã
.
Embeddings	HuggingFace sentence-transformers/gtr-t5-large	Gera√ß√£o de embeddings sem√¢nticos‚Äã
.
Base de Vetores	FAISS (via LangChain)	Indexa√ß√£o e busca sem√¢ntica r√°pida‚Äã
‚Äã
.
Modelo LLM	LLama 3.1-8B-it (4bit)	Gera√ß√£o de respostas com baixo uso de mem√≥ria‚Äã
.
Modelo Vis√£o	LLama-3.2-11B-Vision-Instruct	Gera√ß√£o de descri√ß√µes de imagens‚Äã
‚Äã
.
Modelo Alternativo Vis√£o	Qwen2.5-VL-3B-Instruct	Modelo alternativo para descrever imagens‚Äã
.
Markdown Tools	Docling	Convers√£o de documentos para Markdown, extraindo textos e imagens‚Äã
‚Äã
.
Docker	Docker Container	Empacotamento e deploy est√°vel do sistema‚Äã
.
Speech-to-Text	Pesquisa em andamento (Whisper e outros modelos)	Para transformar consultas de voz em texto‚Äã
.
Multimodal Search	CLIP model	Testes de recupera√ß√£o de imagens diretamente a partir de descri√ß√µes‚Äã
.
3. Funcionalidades e Abordagens Desenvolvidas
üîπ 3.1 Ingest√£o e Indexa√ß√£o
Pipeline estruturado para ingest√£o de PDFs e documentos Word (.doc, .docx).

Cria√ß√£o autom√°tica de √≠ndices de documentos usando Docling.

Extra√ß√£o e descri√ß√£o autom√°tica de imagens durante a ingest√£o‚Äã
.

üîπ 3.2 Modifica√ß√£o da Query para Melhorar o RAG
Refinamento autom√°tico da query para alinhar melhor a busca com o conte√∫do dos documentos‚Äã
.

Gera√ß√£o de queries espec√≠ficas a partir de uma entrada gen√©rica, exemplo:

Entrada: "I have a flat tire. What should I do?"

Modificada para: "Maintenance (Tire Care and Maintenance), Maintenance (Temporary Tire Repair Kit)"‚Äã
.

üîπ 3.3 Image Retrieval (Recupera√ß√£o de Imagens)
Extra√ß√£o dos paths de imagens durante a divis√£o do documento‚Äã
.

Gera√ß√£o de descri√ß√µes autom√°ticas de imagens usando LLama-3.2-11B-Vision-Instruct‚Äã
‚Äã
.

Testes de ranking de imagens com CLIP para avaliar recupera√ß√£o sem√¢ntica direta‚Äã
.

üîπ 3.4 Speech-to-Text
In√≠cio da pesquisa de integra√ß√£o de √°udio:

Modelos analisados: Whisper 1‚Äã
.

Desafios identificados: reconhecimento de termos desconhecidos como "Pixsee", pequeno corpus de teste‚Äã
.

Foco: Permitir que usu√°rios fa√ßam perguntas por voz futuramente.

üîπ 3.5 Infraestrutura e Deploy
Containeriza√ß√£o via Docker:

O sistema inteiro pode ser implantado de forma consistente em qualquer ambiente‚Äã
.

Facilita updates e escalabilidade.

4. Fluxo de Funcionamento do Sistema (Simplificado)
mermaid
Copiar
Editar
flowchart LR
    A[Ingest√£o de Documento] --> B[Divis√£o em Chunks (Texto + Imagens)]
    B --> C[Embeddings - FAISS]
    A --> D[Descri√ß√µes de Imagens]
    C --> E[Consulta Sem√¢ntica]
    D --> E
    F[Usu√°rio faz Consulta (Texto ou Voz)]
    F --> G[Query Modificada]
    G --> E
    E --> H[LLM Gera Resposta com Contexto]
    H --> I[Resposta Final + Imagens Relevantes]
5. Resultados Obtidos

√Årea	Resultados / Melhorias
Busca textual	Recupera√ß√£o de chunks mais relevantes com query refinement‚Äã

Imagens	As imagens certas foram associadas corretamente com textos em mais de 80% dos casos‚Äã

Desempenho FAISS	Testes de performance com bilh√µes de vetores, √≥tima escalabilidade‚Äã

Deploy	Sistema agora dockerizado, reduzindo erros em instala√ß√£o‚Äã

Speech-to-Text	Estudo iniciado; precisando de corpus maior para ajuste fino‚Äã


Implementar de forma pr√°tica o speech-to-text com valida√ß√£o em tempo real‚Äã


Melhorar ainda mais a qualidade das descri√ß√µes e alinhamento sem√¢ntico entre texto e imagens.

Otimizar a infraestrutura para model serving eficiente‚Äã

‚úÖ Resumo Final
O projeto evoluiu de uma base tradicional de RAG para um sistema multimodal, modular, containerizado e preparado para lidar com texto, imagens e voz, tornando-se altamente gen√©rico e escal√°vel.
O uso de refinamento de queries, descri√ß√£o autom√°tica de imagens e modulariza√ß√£o via Docker representam grandes avan√ßos.